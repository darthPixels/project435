STRUCTURE

node JS
ES module (in package.json: "type": "module")
Windows

root/randomData
 - generateRandomData.js 		--> generates root/resources/randomData_form8+11_p1.xml
 - xml_outputTemplate.xml 		--> output template, this is how the randomData_form8+11_p1.xml should look like in the end (with data of course)
 - xmlPath_config.js 			--> defines how each xmlPath is being created, which feeder xml or generator to use and dependencies

root/randomData/data
 - companies_CA_BC.xml 			--> list of companies (incl. city attribute) in Canada, BC
 - diagnoses_CA_BC.xml 			--> list of diagnoses and incident descriptions for Canada, BC
 - ethnicity_CA_BC.xml 			--> ethnicity distribution in Canada, BC
 - firstNames_CA_BC.xml 		--> list of first names (incl. ethnicity and gender attributes) in Canada, BC
 - hospitals_CA_BC.xml 			--> list of hospitals (incl. city attribute) in Canada, BC
 - lastNames_CA_BC.xml 			--> list of last names (incl. ethnicity and gender attributes) in Canada, BC
 - locations_CA_BC.xml 			--> list of locations (incl. city, province, state, postal, zip, areaCode, country attributes) in Canada, BC
 - practitioners_CA_BC.xml 		--> list of practitioners in Canada, BC
 - streetNames_CA_BC.xml 		--> list of streetnames in Canada, BC
 
root/data
 - fieldmapping_8+11_p1.xml     --> Mapping of pdfFields <--> xmlPaths
 
root/resources
- randomData_form8+11_p1.xml    --> the output xml blocks generated by generateRandomData.js


FUNCTION
What generateRandomData.js should do is this:
1) import all external sources (feeder xml, xmlPath_config.js, xml_outputTemplate.xml)
2) go through the xmlPath_config.js to see how to fill each xmlPath
3) use either generators/functions to create the xmlPath content or use feeder xml like lastNames_CA_BC.xml
4) look at the xml_outputTemplate.xml and create this structure with the xmlPath content it generated
5) write n amount (parameter for script: -a n) of these xml blocks into the root/resources/randomData_form8+11_p1.xml according to the "rules"/configs in xmlPath_config.js
6) log into console: amount xml blocks written, checklist xmlPath populated or not
